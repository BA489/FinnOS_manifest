name: Pull Sources from Manifest and build

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  CI_MANIFEST_NAME: default.xml

jobs:

  pull_sources:
    runs-on: oniro-runner

    container:
      image: swr.cn-south-1.myhuaweicloud.com/openharmony-docker/docker_oh_standard:3.2

    steps:

      - name: Set up git-repo
        run: |
          if [ ! -f /bin/repo ]; then
            curl https://gitee.com/oschina/repo/raw/fork_flow/repo-py3 -o /bin/repo
            chmod a+x /bin/repo
          fi

      - uses: actions/checkout@v4

      - name: Set up manifest workspace
        run: |
          # Tell git this repository is safe even if cloned with a different uid
          git config --global --add safe.directory $GITHUB_WORKSPACE

          # The repo tool seems to insist on having a branch checked out or
          # something like that... Without this we get errors like
          #     fatal: couldn't find remote ref refs/heads/master
          cd $GITHUB_WORKSPACE
          git checkout -b master

          # The repo command does not like shallow repos
          if [ "$(git rev-parse --is-shallow-repository)" = "true" ] ; then
            git fetch --unshallow ;
          fi

      - name: Sync mirror
        run: |
          REPO_MIRROR="/__w/repo-mirrors" ;
          if [ ! -e "$REPO_MIRROR" ] ; then
            echo "Creating new repo mirror @ $REPO_MIRROR" ;
            mkdir -p "$REPO_MIRROR" ;
            pushd "$REPO_MIRROR" ;
            repo init -u "$GITHUB_WORKSPACE" -m "$CI_MANIFEST_NAME" --mirror ;
            repo sync -c --no-repo-verify --force-sync -v;
            popd ;
          else
            echo "Reusing repo mirror @ $REPO_MIRROR" ;
          fi ;


      - name: Fetch sources
        run: |
          # Create the build environment in a repo subdir
          mkdir repo && cd repo
          repo init \
            --reference /__w/repo-mirrors \
            --manifest-url "$GITHUB_WORKSPACE" \
            --manifest-name "$CI_MANIFEST_NAME"
          repo sync -c --no-repo-verify --force-sync -v
          repo forall -c 'git lfs pull'


      - name: Download prebuilts
        run: |
          cd repo && ./build/prebuilts_download.sh


      - name: Build
        run: |
          # a shared ccache is used to speed up the build 
          cd repo && ./build.sh --ccache --product-name rk3568

      - name: Archive board image artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rk3568
          path: /__w/manifest/manifest/repo/out/rk3568/packages/phone/images/*
